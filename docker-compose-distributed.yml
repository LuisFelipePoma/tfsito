version: '3.8'

services:
  # Servidor OpenFire para comunicación XMPP
  openfire:
    image: sameersbn/openfire:3.10.3-19
    container_name: taxi_openfire
    ports:
      - "9090:9090"    # Admin console
      - "5222:5222"    # XMPP client connections
      - "5223:5223"    # XMPP client connections (SSL)
      - "7777:7777"    # File transfer
    environment:
      - OPENFIRE_ADMIN_USER=admin
      - OPENFIRE_ADMIN_PASSWORD=1234
      - OPENFIRE_DB_HOST=openfire_db
      - OPENFIRE_DB_NAME=openfire
      - OPENFIRE_DB_USER=openfire
      - OPENFIRE_DB_PASSWORD=openfire123
    volumes:
      - openfire_data:/var/lib/openfire
    depends_on:
      - openfire_db
    networks:
      - taxi_network
    restart: unless-stopped

  # Base de datos para OpenFire
  openfire_db:
    image: postgres:13
    container_name: taxi_openfire_db
    environment:
      - POSTGRES_DB=openfire
      - POSTGRES_USER=openfire
      - POSTGRES_PASSWORD=openfire123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taxi_network
    restart: unless-stopped

  # Coordinador Central
  coordinator:
    build: 
      context: .
      dockerfile: Dockerfile.distributed
    container_name: taxi_coordinator
    environment:
      - HOST_TYPE=coordinator
      - HOST_ID=coordinator_docker
      - OPENFIRE_HOST=openfire
      - OPENFIRE_DOMAIN=localhost
      - OPENFIRE_PORT=9090
    depends_on:
      - openfire
    networks:
      - taxi_network
    restart: unless-stopped
    command: ["python", "distributed_multi_host_system.py", "--type", "coordinator", "--host-id", "coordinator_docker", "--openfire-host", "openfire", "--openfire-domain", "localhost"]

  # Host de Taxis 1
  taxi_host_1:
    build: 
      context: .
      dockerfile: Dockerfile.distributed
    container_name: taxi_host_1
    environment:
      - HOST_TYPE=taxi_host
      - HOST_ID=taxi_host_1
      - OPENFIRE_HOST=openfire
      - OPENFIRE_DOMAIN=localhost
      - OPENFIRE_PORT=9090
    depends_on:
      - coordinator
    networks:
      - taxi_network
    restart: unless-stopped
    command: ["python", "distributed_multi_host_system.py", "--type", "taxi_host", "--host-id", "taxi_host_1", "--openfire-host", "openfire", "--openfire-domain", "localhost"]

  # Host de Taxis 2
  taxi_host_2:
    build: 
      context: .
      dockerfile: Dockerfile.distributed
    container_name: taxi_host_2
    environment:
      - HOST_TYPE=taxi_host
      - HOST_ID=taxi_host_2
      - OPENFIRE_HOST=openfire
      - OPENFIRE_DOMAIN=localhost
      - OPENFIRE_PORT=9090
    depends_on:
      - coordinator
    networks:
      - taxi_network
    restart: unless-stopped
    command: ["python", "distributed_multi_host_system.py", "--type", "taxi_host", "--host-id", "taxi_host_2", "--openfire-host", "openfire", "--openfire-domain", "localhost"]

  # Host de Pasajeros 1
  passenger_host_1:
    build: 
      context: .
      dockerfile: Dockerfile.distributed
    container_name: passenger_host_1
    environment:
      - HOST_TYPE=passenger_host
      - HOST_ID=passenger_host_1
      - OPENFIRE_HOST=openfire
      - OPENFIRE_DOMAIN=localhost
      - OPENFIRE_PORT=9090
    depends_on:
      - coordinator
    networks:
      - taxi_network
    restart: unless-stopped
    command: ["python", "distributed_multi_host_system.py", "--type", "passenger_host", "--host-id", "passenger_host_1", "--openfire-host", "openfire", "--openfire-domain", "localhost"]

  # Host de Pasajeros 2
  passenger_host_2:
    build: 
      context: .
      dockerfile: Dockerfile.distributed
    container_name: passenger_host_2
    environment:
      - HOST_TYPE=passenger_host
      - HOST_ID=passenger_host_2
      - OPENFIRE_HOST=openfire
      - OPENFIRE_DOMAIN=localhost
      - OPENFIRE_PORT=9090
    depends_on:
      - coordinator
    networks:
      - taxi_network
    restart: unless-stopped
    command: ["python", "distributed_multi_host_system.py", "--type", "passenger_host", "--host-id", "passenger_host_2", "--openfire-host", "openfire", "--openfire-domain", "localhost"]

  # Monitor Web (opcional - para visualización)
  web_monitor:
    build: 
      context: .
      dockerfile: Dockerfile.web
    container_name: taxi_web_monitor
    ports:
      - "8080:8080"
    environment:
      - OPENFIRE_HOST=openfire
      - OPENFIRE_DOMAIN=localhost
    depends_on:
      - coordinator
    networks:
      - taxi_network
    restart: unless-stopped

volumes:
  openfire_data:
  postgres_data:

networks:
  taxi_network:
    driver: bridge
