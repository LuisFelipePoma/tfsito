# ===================================================================
# DOCKERFILE PARA SISTEMA DISTRIBUIDO MULTI-HOST
# ===================================================================

FROM python:3.11-slim

# Instalar dependencias del sistema
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    net-tools \
    && rm -rf /var/lib/apt/lists/*

# Configurar directorio de trabajo
WORKDIR /app

# Copiar requirements
COPY requirements.txt .

# Instalar dependencias Python
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código fuente y configuración
COPY src/ ./src/
COPY config/ ./config/

# Crear directorios necesarios
RUN mkdir -p logs

# Crear script de inicio
RUN echo '#!/bin/bash\n\
    echo "🚕 Starting Taxi System Distributed Agent..."\n\
    echo "Host Type: $HOST_TYPE"\n\
    echo "Host ID: $HOST_ID"\n\
    echo "OpenFire Host: $OPENFIRE_HOST"\n\
    echo "OpenFire Domain: $OPENFIRE_DOMAIN"\n\
    \n\
    # Wait for OpenFire to be ready\n\
    echo "⏳ Waiting for OpenFire to be ready..."\n\
    timeout=300\n\
    while [ $timeout -gt 0 ] && ! curl -f http://$OPENFIRE_HOST:9090 > /dev/null 2>&1; do\n\
    echo "OpenFire not ready, waiting 5 seconds... (timeout: $timeout)"\n\
    sleep 5\n\
    timeout=$((timeout-5))\n\
    done\n\
    \n\
    if [ $timeout -le 0 ]; then\n\
    echo "❌ Timeout waiting for OpenFire"\n\
    exit 1\n\
    fi\n\
    \n\
    echo "✅ OpenFire is ready!"\n\
    \n\
    # Load environment configuration if exists\n\
    if [ -f "/app/.env" ]; then\n\
    echo "📝 Loading environment configuration..."\n\
    export $(cat /app/.env | xargs)\n\
    fi\n\
    \n\
    # Start the distributed system\n\
    echo "🚀 Starting distributed taxi system..."\n\
    python src/distributed_multi_host_system.py \\\n\
    --type $HOST_TYPE \\\n\
    --host-id $HOST_ID \\\n\
    --openfire-host $OPENFIRE_HOST \\\n\
    --openfire-domain $OPENFIRE_DOMAIN\n\
    ' > /app/start.sh && chmod +x /app/start.sh

# Crear usuario no-root para seguridad
RUN useradd -m -u 1000 taxiuser && chown -R taxiuser:taxiuser /app
USER taxiuser

# Variables de entorno por defecto
ENV HOST_TYPE=coordinator
ENV HOST_ID=default_host
ENV OPENFIRE_HOST=localhost
ENV OPENFIRE_DOMAIN=localhost
ENV PYTHONUNBUFFERED=1

# Exponer puerto para monitoreo
EXPOSE 8080

# Punto de entrada
CMD ["/app/start.sh"]
